// Code generated by go-swagger; DO NOT EDIT.

package a_p_is_all

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"io"
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/wso2/k8s-api-operator/api-operator/pkg/envoy/server/api/models"
)

// GetApisOKCode is the HTTP code returned for type GetApisOK
const GetApisOKCode int = 200

/*GetApisOK Sent.
APIs sent Successfully.


swagger:response getApisOK
*/
type GetApisOK struct {

	/*
	  In: Body
	*/
	Payload io.ReadCloser `json:"body,omitempty"`
}

// NewGetApisOK creates GetApisOK with default headers values
func NewGetApisOK() *GetApisOK {

	return &GetApisOK{}
}

// WithPayload adds the payload to the get apis o k response
func (o *GetApisOK) WithPayload(payload io.ReadCloser) *GetApisOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get apis o k response
func (o *GetApisOK) SetPayload(payload io.ReadCloser) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetApisOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetApisForbiddenCode is the HTTP code returned for type GetApisForbidden
const GetApisForbiddenCode int = 403

/*GetApisForbidden Forbidden
Not Authorized to send.


swagger:response getApisForbidden
*/
type GetApisForbidden struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetApisForbidden creates GetApisForbidden with default headers values
func NewGetApisForbidden() *GetApisForbidden {

	return &GetApisForbidden{}
}

// WithPayload adds the payload to the get apis forbidden response
func (o *GetApisForbidden) WithPayload(payload *models.Error) *GetApisForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get apis forbidden response
func (o *GetApisForbidden) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetApisForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetApisNotFoundCode is the HTTP code returned for type GetApisNotFound
const GetApisNotFoundCode int = 404

/*GetApisNotFound Not Found.
Requested APIs to send not found.


swagger:response getApisNotFound
*/
type GetApisNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetApisNotFound creates GetApisNotFound with default headers values
func NewGetApisNotFound() *GetApisNotFound {

	return &GetApisNotFound{}
}

// WithPayload adds the payload to the get apis not found response
func (o *GetApisNotFound) WithPayload(payload *models.Error) *GetApisNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get apis not found response
func (o *GetApisNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetApisNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetApisInternalServerErrorCode is the HTTP code returned for type GetApisInternalServerError
const GetApisInternalServerErrorCode int = 500

/*GetApisInternalServerError Internal Server Error.
Error in sending APIs.


swagger:response getApisInternalServerError
*/
type GetApisInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetApisInternalServerError creates GetApisInternalServerError with default headers values
func NewGetApisInternalServerError() *GetApisInternalServerError {

	return &GetApisInternalServerError{}
}

// WithPayload adds the payload to the get apis internal server error response
func (o *GetApisInternalServerError) WithPayload(payload *models.Error) *GetApisInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get apis internal server error response
func (o *GetApisInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetApisInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
